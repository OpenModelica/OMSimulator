loadString("
model A
  input Real u(start = 5.0, unit = \"m/s\");
  output Real y(unit = \"m\");
  output Real y1(unit = \"mm\");
  output Real y2(unit = \"mm/s\");
  Real x(start=1.0);
equation
  x = der(x);
  y = x;
  y1 = u;
  y2 = u;
end A;

model B
  input Real u(start = 1.0, unit = \"m/s\");
  input Real u1(start = 1.0, unit = \"m\");
  input Real u2(start = 1.0, unit = \"m/ms\");
  output Real y(unit = \"m\");
equation
  y = u;
end B;"); getErrorString();

buildModelFMU(A, version="2.0", fmuType="me_cs", platforms={"x86_64-linux-gnu docker run multiarch/crossbuild","x86_64-w64-mingw32 docker run multiarch/crossbuild"}); getErrorString();
buildModelFMU(B, version="2.0", fmuType="me_cs", platforms={"x86_64-linux-gnu docker run multiarch/crossbuild","x86_64-w64-mingw32 docker run multiarch/crossbuild"}); getErrorString();

system("zip -qd A.fmu sources/* && unzip -o A.fmu -d A/");
system("zip -qd B.fmu sources/* && unzip -o B.fmu -d B/");
