project(OMSimulatorLib)

#set(CMAKE_BUILD_TYPE Debug)
set(CMAKE_INSTALL_RPATH "$ORIGIN/../lib:$ORIGIN/")

IF (CMAKE_COMPILER_IS_GNUCC AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER 5.1)
  SET(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -Werror=return-local-addr")
ENDIF()

# Export all symbols from the DLL on Windows
IF (WIN32 AND MSVC)
  set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS ON)
  add_definitions(-DBOOST_ALL_DYN_LINK)
ENDIF()

list(APPEND OMSIMULATORLIB_SOURCES Clock.cpp)
list(APPEND OMSIMULATORLIB_SOURCES Clocks.cpp)
list(APPEND OMSIMULATORLIB_SOURCES CompositeModel.cpp)
list(APPEND OMSIMULATORLIB_SOURCES CSVReader.cpp)
list(APPEND OMSIMULATORLIB_SOURCES CSVWriter.cpp)
list(APPEND OMSIMULATORLIB_SOURCES DirectedGraph.cpp)
list(APPEND OMSIMULATORLIB_SOURCES FMUWrapper.cpp)
list(APPEND OMSIMULATORLIB_SOURCES LookupTable.cpp)
list(APPEND OMSIMULATORLIB_SOURCES MatReader.cpp)
list(APPEND OMSIMULATORLIB_SOURCES MatVer4.cpp)
list(APPEND OMSIMULATORLIB_SOURCES MATWriter.cpp)
list(APPEND OMSIMULATORLIB_SOURCES OMSimulator.cpp)
list(APPEND OMSIMULATORLIB_SOURCES ResultReader.cpp)
list(APPEND OMSIMULATORLIB_SOURCES ResultWriter.cpp)
list(APPEND OMSIMULATORLIB_SOURCES Settings.cpp)
list(APPEND OMSIMULATORLIB_SOURCES Variable.cpp)

list(APPEND OMSIMULATORLIB_SOURCES oms2/ComRef.cpp)
list(APPEND OMSIMULATORLIB_SOURCES oms2/Connection.cpp)
list(APPEND OMSIMULATORLIB_SOURCES oms2/Connector.cpp)
list(APPEND OMSIMULATORLIB_SOURCES oms2/Element.cpp)
list(APPEND OMSIMULATORLIB_SOURCES oms2/FMICompositeModel.cpp)
list(APPEND OMSIMULATORLIB_SOURCES oms2/FMISubModel.cpp)
list(APPEND OMSIMULATORLIB_SOURCES oms2/FMUWrapper.cpp)
list(APPEND OMSIMULATORLIB_SOURCES oms2/Logging.cpp)
list(APPEND OMSIMULATORLIB_SOURCES oms2/Model.cpp)
list(APPEND OMSIMULATORLIB_SOURCES oms2/Scope.cpp)
list(APPEND OMSIMULATORLIB_SOURCES oms2/SignalRef.cpp)
list(APPEND OMSIMULATORLIB_SOURCES oms2/TLMCompositeModel.cpp)
list(APPEND OMSIMULATORLIB_SOURCES oms2/Variable.cpp)

list(APPEND OMSIMULATORLIB_SOURCES oms2/ssd/ConnectionGeometry.cpp)
list(APPEND OMSIMULATORLIB_SOURCES oms2/ssd/ConnectorGeometry.cpp)
list(APPEND OMSIMULATORLIB_SOURCES oms2/ssd/ElementGeometry.cpp)
list(APPEND OMSIMULATORLIB_SOURCES oms2/ssd/SystemGeometry.cpp)

configure_file("${CMAKE_CURRENT_SOURCE_DIR}/Version.cpp.in" "${CMAKE_CURRENT_BINARY_DIR}/Version.cpp" @ONLY)
list(APPEND OMSIMULATORLIB_SOURCES "${CMAKE_CURRENT_BINARY_DIR}/Version.cpp")

include_directories(${FMILibrary_INCLUDEDIR})
include_directories(${CVODELibrary_INCLUDEDIR})
include_directories(${KINSOLLibrary_INCLUDEDIR})
include_directories(${PUGIXML_INCLUDEDIR})
include_directories(${Boost_INCLUDE_DIRS})

link_directories(${FMILibrary_LIBRARYDIR})
link_directories(${CVODELibrary_LIBRARYDIR})
link_directories(${KINSOLLibrary_LIBRARYDIR})
link_directories(${Boost_LIBRARY_DIRS})

# Shared library version
add_library(OMSimulatorLib_shared SHARED ${OMSIMULATORLIB_SOURCES})
set_target_properties(OMSimulatorLib_shared PROPERTIES OUTPUT_NAME OMSimulatorLib)
IF(WIN32 AND MSVC)
  target_link_libraries(OMSimulatorLib_shared fmilib sundials_kinsol sundials_cvode sundials_nvecserial ${Boost_LIBRARIES})
ELSEIF (WIN32 AND MINGW)
  target_link_libraries(OMSimulatorLib_shared fmilib shlwapi sundials_kinsol sundials_cvode sundials_nvecserial ${Boost_LIBRARIES})
ELSE()
  target_link_libraries(OMSimulatorLib_shared fmilib sundials_kinsol sundials_cvode sundials_nvecserial ${Boost_LIBRARIES})
ENDIF()

install(TARGETS OMSimulatorLib_shared DESTINATION lib)
install(TARGETS OMSimulatorLib_shared DESTINATION bin)

# Static library version
add_library(OMSimulatorLib STATIC ${OMSIMULATORLIB_SOURCES})
set_target_properties(OMSimulatorLib PROPERTIES OUTPUT_NAME OMSimulatorLib)
set_target_properties(OMSimulatorLib PROPERTIES POSITION_INDEPENDENT_CODE ON)
install(TARGETS OMSimulatorLib DESTINATION lib)

install(FILES OMSimulator.h Types.h DESTINATION include)
